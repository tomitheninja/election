# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  firstname: String!
  lastname: String!
}

type UserWithCreds {
  id: Int!
  firstname: String!
  lastname: String!
  email: String!
  birth: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Election {
  id: Int!
  name: String!
  start: DateTime
  end: DateTime
  organizer: User!
}

type LoginResult {
  access_token: String!
}

type Query {
  userById(id: Int!): User!
  me: UserWithCreds!
  listUsers(pagination: PaginationInput!): [User!]!
  findById(id: Float!): Election!
  findElections(options: FindAllElectionInput!): [Election!]!
  login(data: LoginInput!): LoginResult!
}

input PaginationInput {
  offset: Int = 0
  limit: Int = 50
}

input FindAllElectionInput {
  offset: Int = 0
  limit: Int = 50
  order: String = "NAME_ASC"
  filter: ElectionTimeFilter = {includePast: true, includeFuture: true}
  organizerId: Float = null
}

input ElectionTimeFilter {
  includePast: Boolean = true
  includeFuture: Boolean = true
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createUser(data: CreateUserInput!): User!
  createElection(data: CreateElectionInput!): Election!
}

input CreateUserInput {
  email: String!
  password: String!
  firstname: String!
  lastname: String!
  birth: DateTime!
}

input CreateElectionInput {
  name: String!
  description: String = ""
  start: DateTime
  end: DateTime
}
